Situation:
Let's use our knowledge of classes to build a user dashboard. 


Plan:
We'll start with three div elements that 
contain content but haven't been styled.


Avalability:
HTML Code ->
<!doctype html>
<html>
    <head>
        <link rel = "stylesheet" type = "text/css" href = "style.css">
    </head>
    <body>
        <div>
            <h2>Dashboard</h2>
        </div>
        <div>
            Profile
            Messages
            Settings
            Help
        </div>
        <div>
            <img src = "https://bit.ly/2WkDp5F" alt = "" title = "">
            <h4>Joe Dramatic</h4>
            <h5>5 million followers</h5>
        </div>
    </body>
</html>

CSS Code ->
img {
    width: 100px;
} 


Action:
1. Set the first div element's class to 'title'.
2. Set the second div element's class to 'navigation'.
3. Set the third div element's class to 'content'. 
4. Add a rule that sets background color to coral
   for elements of the title class.
5. Create a rule that styles elements of the navigation class
   with background color set to lightCoral and color set to white.
6. Style elements of the content class with background color set to
   linen and text-align set to center.
7. Let's apply a style to all div elements by creating a rule
   that sets margin bottom to 10px.
8. To give tidy up the layout, use the div selector to set
   border radius to 5px and padding to 12px for all div elements.



----------------------------------------------------------------------------------------------------



Situation:
Let's use our knowledge of creating classes to
build a pricing card for a webpage. 


Task:
We added a few elements so you can focus 
on building the layout. 


Availability:
HTML Code ->
<!doctype html>
<html>
    <head>
        <link rel = "stylesheet" type = "text/css" href = "style.css">
    </head>
    <body>
        <h1>Pricing</h1>
        <div>
            <p>Basic</p>
            <p>$9.99/mo</p>
            <button>Get Started</button>
        </div>
    </body>
</html>

CSS Code ->
body {
    text-align: center;
} 


Action:
1. Set the div element's class to 'pricing'.
2. Set the first p element's class to 'header'.
3. Give the second p element a class name of 'price'. 
4. Create a rule for elements of the pricing class.
5. Give the elements of the pricing class a border
   of 2px solid indigo and padding of 10px.
6. Create a rule for the header class that sets
   font size to 30px, background color to indigo and color to white.
7. Give the price class a font-size of 25px.
8. Let's tidy up the layout and set the margin of the header class to 0px.



--------------------------------------------------------------------------------------------------



Situation:
Let's build an E-commerce shop item with what we leaned so far. 


Plan:
We added some HTML and CSS to get you started 
so you can focus on coding the layout. 


Availability:
HTML Code ->
<!doctype html>
<html>
    <head>
        <link rel = "stylesheet" type = "text/css" href = "style.css">
    </head>
    <body>
        <h1>E-day</h1>
        <div>
            <img src = "https://mimo.app/i/shoes.png" alt = "" title = "">
            <h3>E-Shoe</h3>
            <h4>
                $2499.99 <span>$4999.99 - 50% off</span>
            </h4>
            <button>Add to Cart</button>
        </div>
    </body>
</html>

CSS Code ->
body {
    font-family: "Arial";
    text-align: center;
}

img {
    width: 110px;
} 

 
Action:
1. Set the div element's class to product.
2. Set the h4 element's class to price.
3. Set the class to oldPrice for the span element. 
4. Create a rule for elements of the product class.
   Set the border to 1px solid, width to 120px and padding to 10px.
5. Let's center the elements of the product class by 
   setting margin to 'auto'.
6. Create a rule for elements of the price class.
   Set color to darkGreen and font size to 20px.
7. Use the .oldPrice selector to set color to gray and
   font size to 12px.
8. Use the button selector to set background color to gold and
   padding to 5px. 